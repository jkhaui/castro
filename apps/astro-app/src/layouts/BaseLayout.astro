---
import {createRequire} from "module";
import {ClientStackRouter} from "../pages/__internals/client-stack-router";
import "../../scripts/polyfills";
import {ViewTransitions} from "astro:transitions";
import {AppRoutes} from "../utils/enums";
import DesktopSideBar from "./DesktopSideBar.astro";
import AppRoot from "./AppRoot.astro";
import FixedBackground from "./FixedBackground.astro";
import * as ReactDOMServer from "react-dom/server";
import * as console from "console";
import {createRequire} from "module";

const require = createRequire(import.meta.url);

const {AppRegistry} = require("react-native");

AppRegistry.registerComponent('ClientStackRouter', () => ClientStackRouter);

const {props, locals, params, url, redirect} = Astro;

const {isIos} = locals;
const {slug} = params;

const pageSlugs = Object.values(AppRoutes);
const pageExists = pageSlugs.some((pageSlug) => pageSlug === slug);


// if (!pageExists && slug !== '404') {
//     return redirect("/404");
// }

// const pathname = url.pathname === undefined ? "/" : url.pathname;

const {
    pathname,
    search,
    ...konstaAppProps
} = props;

function resetReactNavigationContexts() {
    // https://github.com/expo/router/discussions/588
    // https://github.com/react-navigation/react-navigation/blob/9fe34b445fcb86e5666f61e144007d7540f014fa/packages/elements/src/getNamedContext.tsx#LL3C1-L4C1

    // React Navigation is storing providers in a global, this is fine for the first static render
    // but subsequent static renders of Stack or Tabs will cause React to throw a warning. To prevent this warning, we'll reset the globals before rendering.
    const contexts = "__react_navigation__elements_contexts";
    // @ts-expect-error: global
    global[contexts] = new Map<string, React.Context<any>>();
}

AppRegistry.registerComponent('ClientStackRouter', () => ClientStackRouter);

const {element, getStyleElement} = AppRegistry.getApplication('ClientStackRouter', {
    hydrate: true
});

resetReactNavigationContexts();

---

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width">
    <link rel="icon" type="image/x-icon" href="/favicon.ico"/>
    <title>Castro</title>
    <style is:global>
        /* https://necolas.github.io/react-native-web/docs/setup/ */
        /* These styles make the body full-height */
        html, body {
            height: 100%;
        }

        /* These styles disable body scrolling if you are using <ScrollView> */
        body {
            overflow: hidden;
        }
    </style>
    <ViewTransitions/>
    <!--<Fragment set:html={css}/>-->
</head>
<body
        class="min-h-screen flex flex-col w-full z-0 bg-cover"
        style="background-image: url('/background.png')"
>
<FixedBackground/>
<DesktopSideBar/>
<!--<Fragment set:html={_html_}/>-->
<!--<AppRoot pathname={pathname} search={search} konstaAppProps={konstaAppProps}>-->
<!--    <slot />-->
<!--</AppRoot>-->
</body>
</html>
